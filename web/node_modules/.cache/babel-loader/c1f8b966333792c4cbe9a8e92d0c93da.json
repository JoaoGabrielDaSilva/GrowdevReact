{"ast":null,"code":"import axios from 'axios';\n\nclass AxiosRoutes {\n  constructor() {\n    this.baseUrl = 'http://localhost:5000';\n  }\n\n  async postUsers(params, userInfo) {\n    let valid = true;\n    const currentUsers = this.getUsers('/users');\n    currentUsers.find(user => {\n      if (user.login === userInfo.login) {\n        valid = false;\n      }\n    });\n    const response = valid ? axios.post(`${this.baseUrl}${params}`, userInfo) : null;\n    console.log(response);\n  }\n\n  getUsers(params) {\n    const data = axios.get(`${this.baseUrl}${params}`).then(response => response.data).catch(error => console.log(`getUsers: ${error}`));\n    console.log(data);\n  }\n\n}\n\nexport default new AxiosRoutes();","map":{"version":3,"sources":["/Users/macbook/Documents/study/web/src/Services/AxiosRoutes.js"],"names":["axios","AxiosRoutes","constructor","baseUrl","postUsers","params","userInfo","valid","currentUsers","getUsers","find","user","login","response","post","console","log","data","get","then","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,WAAW,GAAG;AACV,SAAKC,OAAL,GAAe,uBAAf;AACH;;AAED,QAAMC,SAAN,CAAgBC,MAAhB,EAAwBC,QAAxB,EAAkC;AAC9B,QAAIC,KAAK,GAAG,IAAZ;AAEA,UAAMC,YAAY,GAAG,KAAKC,QAAL,CAAc,QAAd,CAArB;AAEAD,IAAAA,YAAY,CAACE,IAAb,CAAkBC,IAAI,IAAI;AACtB,UAAIA,IAAI,CAACC,KAAL,KAAeN,QAAQ,CAACM,KAA5B,EAAmC;AAC/BL,QAAAA,KAAK,GAAG,KAAR;AACH;AACJ,KAJD;AAMA,UAAMM,QAAQ,GAAGN,KAAK,GAAGP,KAAK,CAACc,IAAN,CAAY,GAAE,KAAKX,OAAQ,GAAEE,MAAO,EAApC,EAAuCC,QAAvC,CAAH,GACpB,IADF;AAGAS,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACH;;AAEDJ,EAAAA,QAAQ,CAACJ,MAAD,EAAS;AACb,UAAMY,IAAI,GAAGjB,KAAK,CAACkB,GAAN,CAAW,GAAE,KAAKf,OAAQ,GAAEE,MAAO,EAAnC,EACRc,IADQ,CACHN,QAAQ,IAAIA,QAAQ,CAACI,IADlB,EAERG,KAFQ,CAEFC,KAAK,IAAIN,OAAO,CAACC,GAAR,CAAa,aAAYK,KAAM,EAA/B,CAFP,CAAb;AAIAN,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AAGH;;AA9Ba;;AAiClB,eAAe,IAAIhB,WAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nclass AxiosRoutes {\n    constructor() {\n        this.baseUrl = 'http://localhost:5000'\n    }\n\n    async postUsers(params, userInfo) {\n        let valid = true\n\n        const currentUsers = this.getUsers('/users')\n\n        currentUsers.find(user => {\n            if (user.login === userInfo.login) {\n                valid = false\n            }\n        })\n\n        const response = valid ? axios.post(`${this.baseUrl}${params}`, userInfo)\n        : null\n\n        console.log(response)\n    }\n\n    getUsers(params) {\n        const data = axios.get(`${this.baseUrl}${params}`)\n            .then(response => response.data)\n            .catch(error => console.log(`getUsers: ${error}`))\n\n        console.log(data)\n\n        \n    }\n}\n\nexport default new AxiosRoutes()"]},"metadata":{},"sourceType":"module"}